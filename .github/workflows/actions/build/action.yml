name: 'Build'
description: 'Builds the project'

inputs:
  build-dir:
    description: 'CMake build directory'
    required: true
  cache-key:
    description: 'Cache prefix'
    required: true

runs:
  using: 'composite'
  steps:
    # Step 1: Check out the repository code
    - uses: actions/checkout@v4
    
    - name: Restore CMake cache
      uses: actions/cache/restore@v3
      continue-on-error: true  # Prevent the workflow from failing if cache save fails
      with:
        path: |
          ${{ inputs.build-dir }}
          ${{ inputs.build-dir }}/CMakeCache.txt
          ${{ inputs.build-dir }}/CMakeFiles
          ${{ inputs.build-dir }}/_deps
        key: ${{ inputs.cache-key }}
    
    
    - name: Install Ninja
      shell: pwsh
      run: |
        choco install ninja

    - name: Configure CMake
      shell: pwsh
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      run: |
        cmake -B ${{ inputs.build-dir }} -DCMAKE_BUILD_TYPE=Release -DGITHUB_TOKEN=${{ inputs.github-token }} -DBUILD_TESTS=ON -G Ninja

    # Build the project
    - name: Build
      shell: pwsh
      run: |
        cmake --build ${{ inputs.build-dir }} --config Release --verbose
        Get-ChildItem -Path ${{ inputs.build-dir }}/bin -Recurse
        Get-ChildItem -Path ${{ inputs.build-dir }}/bin -Recurse | ForEach-Object {
          if (-not $_.PSIsContainer) {
            try {
              Move-Item -Path $_.FullName -Destination ${{ inputs.build-dir }}/bin/Release/
            } catch {
              Write-Host "Error moving $($_.FullName): $_"
            }
          }
        }

    # Restore CMake configuration from cache
    - name: Restore CMake cache
      uses: actions/cache/save@v3
      with:
        path: |
          ${{ inputs.build-dir }}
          ${{ inputs.build-dir }}/CMakeCache.txt
          ${{ inputs.build-dir }}/CMakeFiles
          ${{ inputs.build-dir }}/_deps
        key: ${{ inputs.cache-key }}-build