name: 'Setup CMake'
description: 'Sets up CMake build environment and caching'

inputs:
  build-dir:
    description: 'CMake build directory'
    required: true
  files:
    description: 'Files list to format/lint check'
    required: false
outputs:
  lint-report:
    description: 'Lint report'

runs:
  using: composite
  steps:  
    - name: Configure CMake
      if: inputs.files != ''
      shell: bash
      run: |
        if [ ! -d ${{ inputs.build-dir }} ]; then
            mkdir -p ${{ inputs.build-dir }}
        fi
        echo "Files to lint: ${{ inputs.files }}"
        cmake -B ${{ inputs.build-dir }} -DCMAKE_BUILD_TYPE=Release -DQUALITY_ONLY=ON -DFILES_TO_LINT=${{ inputs.files }}

    - name: Configure CMake
      if: inputs.files == ''
      shell: bash
      run: |
        if [ ! -d ${{ inputs.build-dir }} ]; then
            mkdir -p ${{ inputs.build-dir }}
        fi
        echo "No files to lint, linting everything"
        cmake -B ${{ inputs.build-dir }} -DCMAKE_BUILD_TYPE=Release -DQUALITY_ONLY=ON

    - name: Check Format
      shell: bash
      run: cmake --build ${{ inputs.build-dir }} --target format-check
    
    - name: Run Lint Check
      shell: bash
      continue-on-error: true
      run: cmake --build ${{ inputs.build-dir }} --target lint-check

    - name: Analyze Lint Results
      shell: bash
      run: |
        cat ${{ inputs.build-dir }}/lint-reports/report.txt
        cmake --build ${{ inputs.build-dir }} --target lint-analyze

    - name: Convert Lint Report to Sonar Format
      shell: bash
      run: |
        # Assuming your clang-tidy report is in ${{ inputs.build-dir }}/lint-reports/report.txt
        # Convert the report to Sonar format
        echo '[' > ${{ inputs.build-dir }}/lint-reports/sonar-report.json
        while IFS= read -r line; do
          if [[ $line =~ ^(.*):([0-9]+):([0-9]+):\ warning:\ (.*)\ \[(.*)\]$ ]]; then
            file="${BASH_REMATCH[1]}"
            line="${BASH_REMATCH[2]}"
            col="${BASH_REMATCH[3]}"
            message="${BASH_REMATCH[4]}"
            rule="${BASH_REMATCH[5]}"
            echo "{
              \"engineId\": \"clang-tidy\",
              \"ruleId\": \"$rule\",
              \"severity\": \"MAJOR\",
              \"type\": \"CODE_SMELL\",
              \"primaryLocation\": {
                \"message\": \"$message\",
                \"filePath\": \"$file\",
                \"textRange\": {
                  \"startLine\": $line,
                  \"startColumn\": $col
                }
              }
            }," >> ${{ inputs.build-dir }}/lint-reports/sonar-report.json
          fi
        done < ${{ inputs.build-dir }}/lint-reports/report.txt
        # Remove last comma and close array
        sed -i '$ s/,$/]/' ${{ inputs.build-dir }}/lint-reports/sonar-report.json
        
        # Debug: Show the generated report
        echo "Generated Sonar Report:"
        cat ${{ inputs.build-dir }}/lint-reports/sonar-report.json

    - name: Upload Sonar Report
      uses: actions/upload-artifact@v4
      with:
        name: sonar-report
        path: ${{ inputs.build-dir }}/lint-reports/sonar-report.json
