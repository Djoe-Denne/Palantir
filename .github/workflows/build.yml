# Main workflow for building and checking code quality
name: Build

# Trigger the workflow on push and pull request events for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - '**'
  issue_comment:
    types: [created]

# Add required permissions
permissions:
  contents: read
  pull-requests: write
  issues: write

# Prevent multiple workflows from running simultaneously on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Global environment variables
env:
  FORCE_COLOR: 1  # Enable colored output in logs
  TERM: xterm-256color  # Terminal type for better formatting
  CMAKE_BUILD_DIR: ${{ github.workspace }}/build
  CACHE_KEY_PREFIX: v1  # Increment this to invalidate all caches

jobs:
  setup:
    name: Setup
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - id: cmake-setup
        uses: ./.github/workflows/actions/setup-cmake
        with:
          github-token: ${{ secrets.PALANTIR_GHA }}
          cache-prefix: ${{ env.CACHE_KEY_PREFIX }}
          build-dir: ${{ env.CMAKE_BUILD_DIR }}

  # Build the project on both platforms
  build:
    name: Build-${{ matrix.os }}
    needs: [setup]
    if: github.event_name != 'issue_comment'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Don't cancel other platforms if one fails
      matrix:
        os: [windows-latest] #, macos-latest]  # Macos is to costly for private builds
        include:
          # Windows-specific settings
          - os: windows-latest
            #artifact_name: Palantir-Windows
            #artifact_path: build/Release/Palantir.exe
          # macOS-specific settings
          #- os: macos-latest
            #artifact_name: Palantir-macOS
            #artifact_path: build/Palantir.app
            #use_quality_build: true
    
    steps:
      - uses: actions/checkout@v4
      - name: Build
        uses: ./.github/workflows/actions/build
        with:
          build-dir: ${{ env.CMAKE_BUILD_DIR }}
          cache-prefix: ${{ env.CACHE_KEY_PREFIX }}

  tests:
    needs: [build]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Tests
        uses: ./.github/workflows/actions/tests
        with:
          build-dir: ${{ env.CMAKE_BUILD_DIR }}
          cache-prefix: ${{ env.CACHE_KEY_PREFIX }}

  clear-run-caches:
    name: Clear Run Caches
    needs: [tests]
    if: always()
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Clear Run Caches
        uses: ./.github/workflows/actions/clear-run-caches
        with:
          build-dir: ${{ env.CMAKE_BUILD_DIR }}
          cache-prefix: ${{ env.CACHE_KEY_PREFIX }}
