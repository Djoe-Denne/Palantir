# Main workflow for building and checking code quality
name: Code Quality

# Trigger the workflow on push and pull request events for the master branch
on:
  push:
    branches: [ master ]
  issue_comment:
    types: [created]

# Global environment variables
env:
  FORCE_COLOR: 1  # Enable colored output in logs
  TERM: xterm-256color  # Terminal type for better formatting
  CMAKE_BUILD_DIR: ${{ github.workspace }}/build
  CACHE_KEY_PREFIX: v1  # Increment this to invalidate all caches

jobs:
  code-quality:
    runs-on: windows-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event.issue.pull_request && github.event.comment.body == '/quality')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Restore CMake cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.CMAKE_BUILD_DIR }}
            ${{ env.CMAKE_BUILD_DIR }}/CMakeCache.txt
            ${{ env.CMAKE_BUILD_DIR }}/CMakeFiles
            ${{ env.CMAKE_BUILD_DIR }}/_deps
          key: ${{ env.CACHE_KEY_PREFIX }}-${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
          restore-keys: |
            ${{ env.CACHE_KEY_PREFIX }}-${{ runner.os }}-cmake-
      
      - name: Check Format
        shell: pwsh
        run: cmake --build ${{ env.CMAKE_BUILD_DIR }} --target format-check
      
      - name: Run Lint Check
        shell: pwsh
        run: cmake --build ${{ env.CMAKE_BUILD_DIR }} --target lint-check

      - name: Analyze Lint Results
        shell: pwsh
        run: |
          cat ${{ env.CMAKE_BUILD_DIR }}/lint-reports/report.txt
          cmake --build ${{ env.CMAKE_BUILD_DIR }} --target lint-analyze
      