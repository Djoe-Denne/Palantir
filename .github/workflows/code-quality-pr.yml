# Main workflow for building and checking code quality
name: Code Quality PR

# Trigger the workflow on push and pull request events for the master branch
on:
  issue_comment:
    types: [created]

# Add required permissions
permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write  # Add this permission for check runs

# Global environment variables
env:
  FORCE_COLOR: 1  # Enable colored output in logs
  TERM: xterm-256color  # Terminal type for better formatting
  CMAKE_BUILD_DIR: ${{ github.workspace }}/build
  CACHE_KEY_PREFIX: v1  # Increment this to invalidate all caches

jobs:
  code-quality:
    runs-on: windows-latest
    if: github.event.issue.pull_request && github.event.comment.body == 'run code quality'
    steps:
      - name: Get PR data
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            core.setOutput('sha', pr.head.sha);

      - name: Create in-progress check
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Code Quality Check',
              head_sha: process.env.PR_SHA,
              status: 'in_progress',
              started_at: new Date()
            })
        env:
          PR_SHA: ${{ steps.pr.outputs.sha }}

      - uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head
          fetch-depth: 0

      - uses: ./.github/workflows/actions/quality
        id: quality
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache-prefix: ${{ env.CACHE_KEY_PREFIX }}
          build-dir: ${{ env.CMAKE_BUILD_DIR }}

      - name: Update check status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Code Quality Check',
              head_sha: process.env.PR_SHA,
              status: 'completed',
              conclusion: '${{ steps.quality.outcome }}' === 'success' ? 'success' : 'failure',
              completed_at: new Date()
            })
        env:
          PR_SHA: ${{ steps.pr.outputs.sha }}
