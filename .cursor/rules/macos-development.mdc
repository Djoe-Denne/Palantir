---
description: macOS Development Guidelines and Best Practices
globs: ["**/mac/**/*.{mm,h}", "**/mac/**/*.{m,h}"]
---

# MacOS Development Guidelines

## Code Organization

- All macOS-specific code MUST reside in the `@mac/` directory
- Use `.mm` extension for Objective-C++ files that mix C++ and Objective-C
- Use `.m` extension for pure Objective-C files
- Headers should be placed in `@mac/include/` for internal macOS headers

## API Usage Guidelines

- Prefer modern Cocoa APIs over deprecated Carbon APIs where possible
- When using Carbon APIs, document the reason and any planned migration path
- Follow Apple's [Memory Management Guidelines](mdc:https:/developer.apple.com/library/archive/documentation/Cocoa/Conceptual/MemoryMgmt/Articles/mmRules.html)

## Cross-Platform Considerations

- Any shared functionality MUST be exposed through the cross-platform interface in `@include/`
- Document platform-specific behavior in headers using `#ifdef __APPLE__`
- Maintain ABI compatibility with existing C++ interfaces

## Testing Requirements

- All new macOS features MUST include unit tests
- Test both Objective-C++ and C++ interface layers
- Verify memory management with Instruments

## Documentation

- Document all public APIs in headers using HeaderDoc format
- Include usage examples for complex implementations
- Reference relevant Apple documentation where applicable

## Build and Validation

- Ensure clean builds with both Xcode and CMake
- Run macOS-specific tests before committing
- Verify ARC compatibility where used 